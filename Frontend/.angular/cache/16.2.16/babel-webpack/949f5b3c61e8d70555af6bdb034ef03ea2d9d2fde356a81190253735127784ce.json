{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n  transition: 'transition-opacity',\n  duration: 300,\n  timing: 'ease-out',\n  onHide: function () {}\n};\nvar DefaultInstanceOptions = {\n  id: null,\n  override: true\n};\nvar Dismiss = /** @class */function () {\n  function Dismiss(targetEl, triggerEl, options, instanceOptions) {\n    if (targetEl === void 0) {\n      targetEl = null;\n    }\n    if (triggerEl === void 0) {\n      triggerEl = null;\n    }\n    if (options === void 0) {\n      options = Default;\n    }\n    if (instanceOptions === void 0) {\n      instanceOptions = DefaultInstanceOptions;\n    }\n    this._instanceId = instanceOptions.id ? instanceOptions.id : targetEl.id;\n    this._targetEl = targetEl;\n    this._triggerEl = triggerEl;\n    this._options = __assign(__assign({}, Default), options);\n    this._initialized = false;\n    this.init();\n    instances.addInstance('Dismiss', this, this._instanceId, instanceOptions.override);\n  }\n  Dismiss.prototype.init = function () {\n    var _this = this;\n    if (this._triggerEl && this._targetEl && !this._initialized) {\n      this._clickHandler = function () {\n        _this.hide();\n      };\n      this._triggerEl.addEventListener('click', this._clickHandler);\n      this._initialized = true;\n    }\n  };\n  Dismiss.prototype.destroy = function () {\n    if (this._triggerEl && this._initialized) {\n      this._triggerEl.removeEventListener('click', this._clickHandler);\n      this._initialized = false;\n    }\n  };\n  Dismiss.prototype.removeInstance = function () {\n    instances.removeInstance('Dismiss', this._instanceId);\n  };\n  Dismiss.prototype.destroyAndRemoveInstance = function () {\n    this.destroy();\n    this.removeInstance();\n  };\n  Dismiss.prototype.hide = function () {\n    var _this = this;\n    this._targetEl.classList.add(this._options.transition, \"duration-\".concat(this._options.duration), this._options.timing, 'opacity-0');\n    setTimeout(function () {\n      _this._targetEl.classList.add('hidden');\n    }, this._options.duration);\n    // callback function\n    this._options.onHide(this, this._targetEl);\n  };\n  Dismiss.prototype.updateOnHide = function (callback) {\n    this._options.onHide = callback;\n  };\n  return Dismiss;\n}();\nexport function initDismisses() {\n  document.querySelectorAll('[data-dismiss-target]').forEach(function ($triggerEl) {\n    var targetId = $triggerEl.getAttribute('data-dismiss-target');\n    var $dismissEl = document.querySelector(targetId);\n    if ($dismissEl) {\n      new Dismiss($dismissEl, $triggerEl);\n    } else {\n      console.error(\"The dismiss element with id \\\"\".concat(targetId, \"\\\" does not exist. Please check the data-dismiss-target attribute.\"));\n    }\n  });\n}\nif (typeof window !== 'undefined') {\n  window.Dismiss = Dismiss;\n  window.initDismisses = initDismisses;\n}\nexport default Dismiss;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}