{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n  defaultTabId: null,\n  activeClasses: 'text-blue-600 hover:text-blue-600 dark:text-blue-500 dark:hover:text-blue-500 border-blue-600 dark:border-blue-500',\n  inactiveClasses: 'dark:border-transparent text-gray-500 hover:text-gray-600 dark:text-gray-400 border-gray-100 hover:border-gray-300 dark:border-gray-700 dark:hover:text-gray-300',\n  onShow: function () {}\n};\nvar DefaultInstanceOptions = {\n  id: null,\n  override: true\n};\nvar Tabs = /** @class */function () {\n  function Tabs(tabsEl, items, options, instanceOptions) {\n    if (tabsEl === void 0) {\n      tabsEl = null;\n    }\n    if (items === void 0) {\n      items = [];\n    }\n    if (options === void 0) {\n      options = Default;\n    }\n    if (instanceOptions === void 0) {\n      instanceOptions = DefaultInstanceOptions;\n    }\n    this._instanceId = instanceOptions.id ? instanceOptions.id : tabsEl.id;\n    this._tabsEl = tabsEl;\n    this._items = items;\n    this._activeTab = options ? this.getTab(options.defaultTabId) : null;\n    this._options = __assign(__assign({}, Default), options);\n    this._initialized = false;\n    this.init();\n    instances.addInstance('Tabs', this, this._instanceId, instanceOptions.override);\n  }\n  Tabs.prototype.init = function () {\n    var _this = this;\n    if (this._items.length && !this._initialized) {\n      // set the first tab as active if not set by explicitly\n      if (!this._activeTab) {\n        this.setActiveTab(this._items[0]);\n      }\n      // force show the first default tab\n      this.show(this._activeTab.id, true);\n      // show tab content based on click\n      this._items.map(function (tab) {\n        tab.triggerEl.addEventListener('click', function (event) {\n          event.preventDefault();\n          _this.show(tab.id);\n        });\n      });\n    }\n  };\n  Tabs.prototype.destroy = function () {\n    if (this._initialized) {\n      this._initialized = false;\n    }\n  };\n  Tabs.prototype.removeInstance = function () {\n    this.destroy();\n    instances.removeInstance('Tabs', this._instanceId);\n  };\n  Tabs.prototype.destroyAndRemoveInstance = function () {\n    this.destroy();\n    this.removeInstance();\n  };\n  Tabs.prototype.getActiveTab = function () {\n    return this._activeTab;\n  };\n  Tabs.prototype.setActiveTab = function (tab) {\n    this._activeTab = tab;\n  };\n  Tabs.prototype.getTab = function (id) {\n    return this._items.filter(function (t) {\n      return t.id === id;\n    })[0];\n  };\n  Tabs.prototype.show = function (id, forceShow) {\n    var _a, _b;\n    var _this = this;\n    if (forceShow === void 0) {\n      forceShow = false;\n    }\n    var tab = this.getTab(id);\n    // don't do anything if already active\n    if (tab === this._activeTab && !forceShow) {\n      return;\n    }\n    // hide other tabs\n    this._items.map(function (t) {\n      var _a, _b;\n      if (t !== tab) {\n        (_a = t.triggerEl.classList).remove.apply(_a, _this._options.activeClasses.split(' '));\n        (_b = t.triggerEl.classList).add.apply(_b, _this._options.inactiveClasses.split(' '));\n        t.targetEl.classList.add('hidden');\n        t.triggerEl.setAttribute('aria-selected', 'false');\n      }\n    });\n    // show active tab\n    (_a = tab.triggerEl.classList).add.apply(_a, this._options.activeClasses.split(' '));\n    (_b = tab.triggerEl.classList).remove.apply(_b, this._options.inactiveClasses.split(' '));\n    tab.triggerEl.setAttribute('aria-selected', 'true');\n    tab.targetEl.classList.remove('hidden');\n    this.setActiveTab(tab);\n    // callback function\n    this._options.onShow(this, tab);\n  };\n  Tabs.prototype.updateOnShow = function (callback) {\n    this._options.onShow = callback;\n  };\n  return Tabs;\n}();\nexport function initTabs() {\n  document.querySelectorAll('[data-tabs-toggle]').forEach(function ($parentEl) {\n    var tabItems = [];\n    var activeClasses = $parentEl.getAttribute('data-tabs-active-classes');\n    var inactiveClasses = $parentEl.getAttribute('data-tabs-inactive-classes');\n    var defaultTabId = null;\n    $parentEl.querySelectorAll('[role=\"tab\"]').forEach(function ($triggerEl) {\n      var isActive = $triggerEl.getAttribute('aria-selected') === 'true';\n      var tab = {\n        id: $triggerEl.getAttribute('data-tabs-target'),\n        triggerEl: $triggerEl,\n        targetEl: document.querySelector($triggerEl.getAttribute('data-tabs-target'))\n      };\n      tabItems.push(tab);\n      if (isActive) {\n        defaultTabId = tab.id;\n      }\n    });\n    new Tabs($parentEl, tabItems, {\n      defaultTabId: defaultTabId,\n      activeClasses: activeClasses ? activeClasses : Default.activeClasses,\n      inactiveClasses: inactiveClasses ? inactiveClasses : Default.inactiveClasses\n    });\n  });\n}\nif (typeof window !== 'undefined') {\n  window.Tabs = Tabs;\n  window.initTabs = initTabs;\n}\nexport default Tabs;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}