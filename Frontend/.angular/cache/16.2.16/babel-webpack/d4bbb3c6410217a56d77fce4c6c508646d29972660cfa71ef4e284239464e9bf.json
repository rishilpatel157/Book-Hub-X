{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nimport { Datepicker as FlowbiteDatepicker, DateRangePicker as FlowbiteDateRangePicker } from 'flowbite-datepicker';\nvar Default = {\n  defaultDatepickerId: null,\n  autohide: false,\n  format: 'mm/dd/yyyy',\n  maxDate: null,\n  minDate: null,\n  orientation: 'bottom',\n  buttons: false,\n  autoSelectToday: 0,\n  title: null,\n  language: 'en',\n  rangePicker: false,\n  onShow: function () {},\n  onHide: function () {}\n};\nvar DefaultInstanceOptions = {\n  id: null,\n  override: true\n};\nvar Datepicker = /** @class */function () {\n  function Datepicker(datepickerEl, options, instanceOptions) {\n    if (datepickerEl === void 0) {\n      datepickerEl = null;\n    }\n    if (options === void 0) {\n      options = Default;\n    }\n    if (instanceOptions === void 0) {\n      instanceOptions = DefaultInstanceOptions;\n    }\n    this._instanceId = instanceOptions.id ? instanceOptions.id : datepickerEl.id;\n    this._datepickerEl = datepickerEl;\n    this._datepickerInstance = null;\n    this._options = __assign(__assign({}, Default), options);\n    this._initialized = false;\n    this.init();\n    instances.addInstance('Datepicker', this, this._instanceId, instanceOptions.override);\n  }\n  Datepicker.prototype.init = function () {\n    if (this._datepickerEl && !this._initialized) {\n      if (this._options.rangePicker) {\n        this._datepickerInstance = new FlowbiteDateRangePicker(this._datepickerEl, this._getDatepickerOptions(this._options));\n      } else {\n        this._datepickerInstance = new FlowbiteDatepicker(this._datepickerEl, this._getDatepickerOptions(this._options));\n      }\n      this._initialized = true;\n    }\n  };\n  Datepicker.prototype.destroy = function () {\n    if (this._initialized) {\n      this._initialized = false;\n      this._datepickerInstance.destroy();\n    }\n  };\n  Datepicker.prototype.removeInstance = function () {\n    this.destroy();\n    instances.removeInstance('Datepicker', this._instanceId);\n  };\n  Datepicker.prototype.destroyAndRemoveInstance = function () {\n    this.destroy();\n    this.removeInstance();\n  };\n  Datepicker.prototype.getDatepickerInstance = function () {\n    return this._datepickerInstance;\n  };\n  Datepicker.prototype.getDate = function () {\n    if (this._options.rangePicker && this._datepickerInstance instanceof FlowbiteDateRangePicker) {\n      return this._datepickerInstance.getDates();\n    }\n    if (!this._options.rangePicker && this._datepickerInstance instanceof FlowbiteDatepicker) {\n      return this._datepickerInstance.getDate();\n    }\n  };\n  Datepicker.prototype.setDate = function (date) {\n    if (this._options.rangePicker && this._datepickerInstance instanceof FlowbiteDateRangePicker) {\n      return this._datepickerInstance.setDates(date);\n    }\n    if (!this._options.rangePicker && this._datepickerInstance instanceof FlowbiteDatepicker) {\n      return this._datepickerInstance.setDate(date);\n    }\n  };\n  Datepicker.prototype.show = function () {\n    this._datepickerInstance.show();\n    this._options.onShow(this);\n  };\n  Datepicker.prototype.hide = function () {\n    this._datepickerInstance.hide();\n    this._options.onHide(this);\n  };\n  Datepicker.prototype._getDatepickerOptions = function (options) {\n    var datepickerOptions = {};\n    if (options.buttons) {\n      datepickerOptions.todayBtn = true;\n      datepickerOptions.clearBtn = true;\n      if (options.autoSelectToday) {\n        datepickerOptions.todayBtnMode = 1;\n      }\n    }\n    if (options.autohide) {\n      datepickerOptions.autohide = true;\n    }\n    if (options.format) {\n      datepickerOptions.format = options.format;\n    }\n    if (options.maxDate) {\n      datepickerOptions.maxDate = options.maxDate;\n    }\n    if (options.minDate) {\n      datepickerOptions.minDate = options.minDate;\n    }\n    if (options.orientation) {\n      datepickerOptions.orientation = options.orientation;\n    }\n    if (options.title) {\n      datepickerOptions.title = options.title;\n    }\n    if (options.language) {\n      datepickerOptions.language = options.language;\n    }\n    return datepickerOptions;\n  };\n  Datepicker.prototype.updateOnShow = function (callback) {\n    this._options.onShow = callback;\n  };\n  Datepicker.prototype.updateOnHide = function (callback) {\n    this._options.onHide = callback;\n  };\n  return Datepicker;\n}();\nexport function initDatepickers() {\n  document.querySelectorAll('[datepicker], [inline-datepicker], [date-rangepicker]').forEach(function ($datepickerEl) {\n    if ($datepickerEl) {\n      var buttons = $datepickerEl.hasAttribute('datepicker-buttons');\n      var autoselectToday = $datepickerEl.hasAttribute('datepicker-autoselect-today');\n      var autohide = $datepickerEl.hasAttribute('datepicker-autohide');\n      var format = $datepickerEl.getAttribute('datepicker-format');\n      var maxDate = $datepickerEl.getAttribute('datepicker-max-date');\n      var minDate = $datepickerEl.getAttribute('datepicker-min-date');\n      var orientation_1 = $datepickerEl.getAttribute('datepicker-orientation');\n      var title = $datepickerEl.getAttribute('datepicker-title');\n      var language = $datepickerEl.getAttribute('datepicker-language');\n      var rangePicker = $datepickerEl.hasAttribute('date-rangepicker');\n      new Datepicker($datepickerEl, {\n        buttons: buttons ? buttons : Default.buttons,\n        autoSelectToday: autoselectToday ? autoselectToday : Default.autoSelectToday,\n        autohide: autohide ? autohide : Default.autohide,\n        format: format ? format : Default.format,\n        maxDate: maxDate ? maxDate : Default.maxDate,\n        minDate: minDate ? minDate : Default.minDate,\n        orientation: orientation_1 ? orientation_1 : Default.orientation,\n        title: title ? title : Default.title,\n        language: language ? language : Default.language,\n        rangePicker: rangePicker ? rangePicker : Default.rangePicker\n      });\n    } else {\n      console.error(\"The datepicker element does not exist. Please check the datepicker attribute.\");\n    }\n  });\n}\nif (typeof window !== 'undefined') {\n  window.Datepicker = Datepicker;\n  window.initDatepickers = initDatepickers;\n}\nexport default Datepicker;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}