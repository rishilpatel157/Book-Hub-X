{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet CommunityService = /*#__PURE__*/(() => {\n  class CommunityService {\n    constructor(http) {\n      this.http = http;\n      this.url = \"http://localhost:8080\";\n    }\n    createCommunity(title, id) {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n      return this.http.post(`${this.url}/community/${id}`, title, {\n        headers,\n        responseType: 'text'\n      });\n    }\n    getPagedItems(page, size) {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n      const params = new HttpParams().set('page', page.toString()).set('size', size.toString());\n      return this.http.get(`${this.url}/community/pages`, {\n        headers,\n        params\n      });\n    }\n    getCommunityById(id) {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n      return this.http.get(`${this.url}/communitybyid/${id}`, {\n        headers\n      });\n    }\n    joinCommunity(id) {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n      return this.http.get(`${this.url}/communityjoin/${id}`, {\n        headers\n      });\n    }\n    getMessage(id) {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n      return this.http.get(`${this.url}/communityallMessage/${id}`, {\n        headers\n      });\n    }\n    sendMessage(id, message) {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n      return this.http.post(`${this.url}/communitydiscussion/${id}`, message, {\n        headers\n      });\n    }\n    static {\n      this.ɵfac = function CommunityService_Factory(t) {\n        return new (t || CommunityService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CommunityService,\n        factory: CommunityService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CommunityService;\n})();\nexport { CommunityService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}